<div class="page searchnone">
    <div class="container-fluid">
        <div class="page-content sab">
            <div class="whitepage">
                <div class="title">{{ 'Mağazalar' | translate }}</div>
                <div class="content">
                    <div class="magazalar">
                        <form action="/store?city" method="get" id="form_store">
                            <div class="selectWidth" style="overflow: unset">
                                <em>{{ 'ÜLKE' | translate }} :</em>
                                <div class="sl">
                                    <select name="country" onchange="this.form.submit()">
                                        <option value="0">{{ 'Seçiniz' | translate }}</option>
                                        {% for row in store.country_list %}
                                            <option value="{{ row.country }}" {{ row.country == store.selected_country ? " selected" : "" }} >{{ row.text }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                            <br><br>
                            <div class="selectWidth" style="overflow: unset">
                                <em>{{ 'ŞEHİR' | translate }} :</em>
                                <div class="sl">
                                    <select name="city" onchange="this.form.submit()">
                                        <option value="0">{{ 'Seçiniz' | translate }}</option>
                                        {% for row in store.list_city %}
                                            <option value="{{ row.city }}" {{ row.city == store.selected_city ? " selected" : "" }} >{{ row.city }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                            <div class="satis-maps">
                                <div id="map"></div>
                            </div>
                            <div class="address">
                                <div class="addressliste">
                                    <strong>{{ store.selected_city  }}</strong>
                                    {% for row in store.list %}
                                        <div class="list">
                                            <span> {{ row.name }}</span>
                                            <ul>
                                                <li>{{ row.street }} {{ row.state_province }} {{ row.city }}</li>
                                                <li><a href="tel:{{ row.phone_one }}">{{ row.phone_one }} </a>
                                                <li><a href="tel:{{ row.phone_two }}">{{ row.phone_two }} </a> </li>
                                                <li><a href="mailto:{{ row.email }}">{{ row.email }}</a></li>
                                            </ul>
                                            <a class="btn" target="_blank" href="http://maps.google.com/maps?q={{ row.latitude }},{{ row.longitude }}">{{ 'YOL TARİFİ AL' | translate}}</a>
                                        </div>
                                    {% endfor %}


                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places,geometry&{{ store_env.key }}&language={{ store_env.language }}"></script>
<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', init);
    function init() {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 1,
            maxZoom:17,
            center: new google.maps.LatLng(-34.397, 200.644),
            scrollwheel: false,
            styles: [{
                "featureType": "water",
                "elementType": "geometry.fill",
                "stylers": [{"color": "#a1cbff"}]
            }, {
                "featureType": "transit",
                "stylers": [{"color": "#808080"}, {"visibility": "off"}]
            }, {
                "featureType": "road.highway",
                "elementType": "geometry.stroke",
                "stylers": [{"visibility": "on"}, {"color": "#b3b3b3"}]
            }, {
                "featureType": "road.highway",
                "elementType": "geometry.fill",
                "stylers": [{"color": "#fed89d"}]
            }, {
                "featureType": "road.local",
                "elementType": "geometry.fill",
                "stylers": [{"visibility": "on"}, {"color": "red"}, {"weight": 1.8}]
            }, {
                "featureType": "road.local",
                "elementType": "geometry.stroke",
                "stylers": [{"color": "#d7d7d7"}]
            }, {
                "featureType": "poi",
                "elementType": "geometry.fill",
                "stylers": [{"visibility": "on"}, {"color": "#ebebeb"}]
            }, {
                "featureType": "administrative",
                "elementType": "geometry",
                "stylers": [{"color": "#a7a7a7"}]
            }, {
                "featureType": "road.arterial",
                "elementType": "geometry.fill",
                "stylers": [{"color": "#e9e6df"}]
            }, {
                "featureType": "road.arterial",
                "elementType": "geometry.fill",
                "stylers": [{"color": "#e9e6df"}]
            }, {
                "featureType": "landscape",
                "elementType": "geometry.fill",
                "stylers": [{"visibility": "on"}, {"color": "#e9e6df"}]
            }, {
                "featureType": "road",
                "elementType": "labels.text.fill",
                "stylers": [{"color": "#696969"}]
            }, {
                "featureType": "administrative",
                "elementType": "labels.text.fill",
                "stylers": [{"visibility": "on"}, {"color": "#737373"}]
            }, {
                "featureType": "poi",
                "elementType": "labels.icon",
                "stylers": [{"visibility": "off"}]
            }, {
                "featureType": "poi",
                "elementType": "labels",
                "stylers": [{"visibility": "off"}]
            }, {
                "featureType": "road.arterial",
                "elementType": "geometry.stroke",
                "stylers": [{"color": "#d6d6d6"}]
            }, {
                "featureType": "road",
                "elementType": "labels.icon",
                "stylers": [{"visibility": "off"}]
            }, {}, {
                "featureType": "poi",
                "elementType": "geometry.fill",
                "stylers": [{"color": "#e9e6df"}]
            }],
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            animation: google.maps.Animation.DROP
        });

     /*   var locations = [
            ['İSTANBUL', 41.0054958,28.8720966],
            ['KOCAELİ', 40.8662806,29.5575203],
            ['OSMANİYE', 37.070192,36.2422705],
            ['ŞIRNAK', 37.4300433,41.9185022],
            ['ADIYAMAN', 37.8063067,37.7870747],
            ['ERZURUM', 39.9119605,41.2284113],
            ['SİVAS', 39.5918301,36.7441295]
        ];*/
        var locations = [];

        {% for row in store.list %}
        locations.push(Array(
            "{{ row.city }}",
                {{ row.latitude }},
                {{ row.longitude }}
        ));
        {% endfor %}

        var infowindow = new google.maps.InfoWindow();

        var marker, i;
        var markers = new Array();

        for (i = 0; i < locations.length; i++) {
            marker = new google.maps.Marker({
                position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                map: map,
                icon: '../../pub/assets/floshoes/images/flo-marker.png'
            });

            markers.push(marker);

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    infowindow.setContent(locations[i][0]);
                    infowindow.open(map, marker);
                }
            })(marker, i));
        }

        function AutoCenter() {
            //  Create a new viewpoint bound
            var bounds = new google.maps.LatLngBounds();
            //  Go through each...
            $.each(markers, function (index, marker) {
                bounds.extend(marker.position);
            });
            //  Fit these bounds to the map
            map.fitBounds(bounds);
        }

        AutoCenter();
    }
</script>
