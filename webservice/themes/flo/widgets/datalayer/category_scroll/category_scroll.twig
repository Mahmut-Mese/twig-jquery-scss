{% if layerData.productList is not empty %}
<script>
    var dataLayer = window.dataLayer || [];
    var scrollCategoryProductList = [];

    window.productList = window.productList || [];
    window.showedProductIds = window.showedProductIds || [];

    window.productsWithId = window.productsWithId || {};
    var productIds = [];

    {% set mainCategoryName = '' %}
    {% set subCategoryName = '' %}

    {% for product in layerData.productList %}
    {% set mainCategoryName = (product.categories|first).name %}
    {% set subCategoryName = (product.categories|last).name %}

    var item = {
        id: "{{ product.sku }}",
        name: "{{ product.name }}",
        position: window.showedProductIds.length + 1,
        entity_id: "{{ product.id }}",
        brand: "{{ product.manufacturer }}",
        price: "{{ product.third_price | default(product.special_price) | default(product.price) | number_format(2) }}",
        category: "{{ product.ecommerce_categories | default(product.categories|first.name ~ '/' ~ product.categories|last.name) }}",
        variant: "{{ product.renk }}",
        list: window.location.pathname.substr(1,1).toUpperCase() + window.location.pathname.substr(2),
        dimension2: "",
        dimension9: "{{ product.model }}",
        dimension17: "{{ product.gender }}",
        dimension18: "{{ product.sezon_yil }} - {{ product.season }}",
        dimension29: "{{ product.category_ids|last }}",
        dimension30: "{{ product.categories|first.name }}",
        dimension31: "{{ product.categories|last.name }}",
        dimension32: "{{ product.saya_malzeme }}",
        dimension33: "{{ product.qty }}",
        dimension34: "{{ product.price }}",
        dimension35: "{{ product.is_in_stock ? 1 : 0 }}",
        dimension36: "TRY",
        dimension37: "{{ product.sku }}",		

		{% set rule = product.rule_info | first %}
		dimension40: {{ product.rule_info ? 1 : 0 }},
		dimension41: "{{ rule.label }}",
    };

    scrollCategoryProductList.push(item);
    window.productList.push(item);
    window.showedProductIds.push({{ product.id }});
    GtmDataLayer.set('product{{ product.sku }}', item, true);

    productIds.push(item.id);
    window.productsWithId[item.id] = item;
    {% endfor %}

    try {
        categoryIOEventType = 'product_impressions_page';
        categoryIO.observeItems(productIds);
    } catch (e) {
        var ecommerce = {
            currencyCode: "TRY",
            impressions: scrollCategoryProductList
        };
        dataLayer.push({
            'event': 'product_impressions_page',
            'ecommerce': ecommerce
        });
    }

    
</script>
{% endif %}